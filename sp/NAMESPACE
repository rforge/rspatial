useDynLib(sp)

export(CRS, print.CRS, proj4string, "proj4string<-", is.projected)

export(bbox, GetGridIndex, points2grid, bpy.colors, bubble, cplot, lplot, 
	mapasp, point.in.polygon, map.to.lev, zerodist, remove.duplicates)

export(coordinates, "coordinates<-", coordinates.SPDF, coordinatevalues)

export(Coordinates)

export(dimensions)
 
export(SpatialCell, SpatialPoints, SpatialPointsDataFrame, SpatialCellDataFrame)

export(Sline, SpatialLines, SLDF, getSLlinesSlot, getSlineCoordsSlot)

export(contourLines2SlineList, contourLines2df, contourLines2SpatialLines, contourLines2SLDF)

export(arcobj2SlineList, arcobj2df, arcobj2SpatialLines, arcobj2SLDF)

export(shapes2SlineList, shapes2SpatialLines, shp2SLDF)

export(plotSpatialLines)

export(as.SpatialPoints.SpatialPointsDataFrame,
	as.SpatialGriddedDataFrame.SpatialCellDataFrame,
	as.SpatialCellDataFrame.SpatialGriddedDataFrame,
	as.image.SpatialGriddedDataFrame)

export(gridparameters, "gridded<-", griddedfn, gridded, SpatialGridded)

#export(as.SpatialRings.Shapelist, as.SpatialRings.matrixList, 
#	as.Ring4.matrix)

export(getSringCoordsSlot, getSringLabptSlot, getSringAreaSlot, getSringsSringsSlot, getSringsplotOrderSlot, getSringsLabptSlot, getSringsIDSlot, getSRpolygonsSlot, getSRplotOrderSlot, getSRSringsLabptSlots, getSRSringsIDSlots, getSRnParts)

export(as.SpatialRings.SringsList, Srings, Sring, SpatialRings, as.SpatialRings.Shapes, as.SpatialRings.map, as.SpatialRings.pal, plotSpatialRings)

export(ShowSpatialPointsDataFrame)

export(select.spatial)

export(read.asciigrid, write.asciigrid, read.gdal)

exportClasses(CRS, Spatial, 
	SpatialPoints, SpatialPointsDataFrame, 
	SpatialGridded, SpatialGriddedDataFrame,
	SpatialCell, SpatialCellDataFrame,
	Sline, SpatialLines, SpatialLinesDataFrame)

exportClasses(Sring, Srings, SpatialRings, SpatialRingsDataFrame)

exportMethods(show, bbox, coordinates, arcs, rings, gridded, dimensions, "[")

# is this necessary? --
#exportMethods(coerce)

exportMethods(Coordinates)

S3method("[", SpatialPoints)

S3method("[", SpatialPointsDataFrame)
S3method("[[", SpatialPointsDataFrame)
S3method("[[<-", SpatialPointsDataFrame)

S3method("[", SpatialCellDataFrame)
S3method("[[", SpatialCellDataFrame)
S3method("[[<-", SpatialCellDataFrame)

S3method("[", SpatialGriddedDataFrame)
S3method("[[", SpatialGriddedDataFrame)
S3method("[[<-", SpatialGriddedDataFrame)

S3method(as.matrix, SpatialCellDataFrame)
S3method(as.matrix, SpatialGriddedDataFrame)

S3method(as.data.frame, SpatialPoints)
S3method(as.data.frame, SpatialPointsDataFrame)
S3method(as.data.frame, SpatialCellDataFrame)
S3method(as.data.frame, SpatialGriddedDataFrame)

S3method(dim, SpatialPointsDataFrame)

S3method(image, SpatialCellDataFrame)
S3method(image, SpatialGriddedDataFrame)

S3method(names, SpatialPointsDataFrame)
S3method(names, SpatialCellDataFrame)

S3method(plot, Spatial)
S3method(plot, SpatialCell)
S3method(plot, SpatialCellDataFrame)
S3method(plot, SpatialPoints)
S3method(plot, SpatialPointsDataFrame)
S3method(plot, SpatialRings)

S3method(print, CRS)
S3method(print, SpatialPoints)
S3method(print, SpatialCell)
S3method(print, SpatialGridded)
S3method(print, SpatialPointsDataFrame)
S3method(print, SpatialCellDataFrame)
S3method(print, SpatialGriddedDataFrame)
S3method(print, summary.Spatial)
S3method(print, summary.SpatialPoints)
S3method(print, summary.SpatialCell)
S3method(print, summary.SpatialGridded)
S3method(print, summary.SpatialPointsDataFrame)
S3method(print, summary.SpatialCellDataFrame)
S3method(print, summary.SpatialGriddedDataFrame)

S3method(stack, SpatialPointsDataFrame)
S3method(stack, SpatialCellDataFrame)

S3method(subset, SpatialCell)
S3method(subset, SpatialCellDataFrame)
S3method(subset, SpatialPoints)
S3method(subset, SpatialPointsDataFrame)

S3method(summary, Spatial)
S3method(summary, SpatialPoints)
S3method(summary, SpatialPointsDataFrame)
S3method(summary, SpatialCell)
S3method(summary, SpatialCellDataFrame)
S3method(summary, SpatialGridded)
S3method(summary, SpatialGriddedDataFrame)

export(".__C__CRS")
export(".__C__SpatialPoints")
export(".__C__SpatialPointsDataFrame")
export(".__C__SpatialCellDataFrame")
export(".__C__SpatialGriddedDataFrame")
