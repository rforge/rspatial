SpatialDataPolygons doesn't known which columns in the
attribute data are the label points. Change into
SpatialDataFramePolygon, and make it descend from
SpatialDataFrame?

Remove all PolygonX classes extending SpatialData; 
however, does each polygon need a bounding box?

subsetting polygons;
not replicate projection in polygons;
(plotting) polygons with islands; crossing polygons?
SpatialDataPolygons -> SpatialDataFramePolygons

What exactly is the interface?
1 coordinates() gets/sets coordinates
2 polygons() gets/sets polygons
3 as.data.frame() gets the data as data.frame

0.4-1 splits proj out of sp and (hopefully) simplifies 20030318 RSB

make "[" work for SDFGrid and SDPolygons

do we need "[<-" ?

SpatialData-class.Rd contains merge conflict in header -- grep "=====" 

look at stack() to improve map.to.lev

write article for R-NEWS

draft specification of interfaces:

bbox
coordinates
coordinates<- # 2/3D matrix, char vector, int vector, formula; allow NULL object
polygons
polygons<-

methods:
	print/show
	plot
	summary
	as.data.frame

manuals:
	SpatialData generic functions
	SpatialDataFrame functions
	SpatialDataFrameGrid functions
	SpatialDataPolygons functions

done: maps -> SpatialDataPolygons; do reverse?
	as(x, "maps") # for SpatialDataPolygons
	look at difference in range between maps() and those of polygon vertexes

do:
	summary(SpatialDataPolygon)

test:
	3D data frames
	3D regulalr grids
	3D: test as.images.SDFG for (x,y), (x,z) and (y,z) slices

remove spatial.data.frame.R
add :

image.SpatialDataFrameGrid = function(data, col = 1, ...) {
	image.default(as.image.SDFG(data, attr = col), ...)
}

sp.coords(x) <- sp.coords(y) ??
sp.coords(x) <- c("x", "y")

S-PLUS portability:
	PACKAGE = ...
	plot(..., asp = 1)
